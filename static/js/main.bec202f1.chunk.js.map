{"version":3,"sources":["components/Card.js","components/NewCardForm.js","components/Board.js","App.js","registerServiceWorker.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleclick","onDeleteCard","id","state","react_default","a","createElement","className","text","emoji","style","color","type","aria-label","onClick","Component","EMOJI_LIST","getUnicode","NewCardForm","addCard","event","preventDefault","card","console","log","addCardCallback","setState","objectSpread","cleared","onInputChange","updatedState","field","target","name","value","onSubmit","onChange","Board","cardId","newCardList","cardList","filter","axios","delete","concat","then","response","catch","error","alert","message","cardIds","map","item","toConsumableArray","Math","max","apply","post","url","boardName","_this2","get","cardlist","data","_this3","cardcollection","i","src_components_Card","key","classname","src_components_NewCardForm","App","src_components_Board","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bec202f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\n\nimport './Card.css';\n\nclass Card extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n  handleclick =()=>{\n    this.props.onDeleteCard(this.props.id)\n  }\n  render() {\n    return (\n      <div className=\"card\">\n         {this.props.id} - {this.props.text} {this.props.emoji}\n        <button\n          style={{ color: '#00f' }}\n          type=\"button\"\n          className=\"btn btn-danger card__delete\"\n          aria-label=\"Close\"\n          onClick={this.handleclick}\n        >\n          Delete\n        </button>\n      </div>\n    )\n  }\n}\n\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport emoji from 'emoji-dictionary';\nimport './NewCardForm.css';\n\nconst EMOJI_LIST = [\"\", emoji.getUnicode(\"heart_eyes\"), emoji.getUnicode(\"beer\"), emoji.getUnicode(\"clap\"), emoji.getUnicode(\"sparkling_heart\"), emoji.getUnicode(\"heart_eyes_cat\"), emoji.getUnicode(\"dog\")]\n\nclass NewCardForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.cleared = {\n            text: \"\",\n            emoji: \"\",\n        };\n\n        this.state = { ...this.cleared }\n    }\n\n    addCard = (event) => {\n        event.preventDefault();\n\n        const card = this.state;\n        console.log(this.props)\n\n        this.props.addCardCallback(card)\n\n        this.setState({ ...this.cleared });\n    }\n    onInputChange = (event) => {\n        const updatedState = {};\n\n        const field = event.target.name;\n        const value = event.target.value;\n\n        updatedState[field] = value;\n        this.setState(updatedState);\n    }\n\n    render() {\n        return (\n            <div className=\"new-card-form\">\n            <form\n                className=\"new-card-form__form\"\n                onSubmit={this.addCard}\n            >\n                <h3 className=\"new-card-form__header\">Add a Card</h3>\n                <label className=\"new-card-form__form-label\">\n                    Text:\n                    <input\n                        className=\"new-card-form__form-textarea\"\n                        name=\"text\"\n                        type=\"text\"\n                        value={this.state.text}\n                        onChange={this.onInputChange}></input>\n                </label>\n                <label className=\"new-card-form__form-label\">\n                    Emoji:\n                    <select\n                        className=\"new-card-form__form-select\"\n                        name=\"emoji\"\n                        value={this.state.emoji}\n                        onChange={this.onInputChange}>\n                        <option value={EMOJI_LIST[0]}>{EMOJI_LIST[0]}</option>\n                        <option value={EMOJI_LIST[1]}>{EMOJI_LIST[1]}</option>\n                        <option value={EMOJI_LIST[2]}>{EMOJI_LIST[2]}</option>\n                        <option value={EMOJI_LIST[3]}>{EMOJI_LIST[3]}</option>\n                        <option value={EMOJI_LIST[4]}>{EMOJI_LIST[4]}</option>\n                        <option value={EMOJI_LIST[5]}>{EMOJI_LIST[5]}</option>\n                        <option value={EMOJI_LIST[6]}>{EMOJI_LIST[6]}</option>\n                        </select>\n                        \n                </label>\n                <input className=\"btn btn-success new-card-form__form-button\" type=\"submit\" name=\"submit\" value=\"Add a Card\" />\n            </form>\n            </div>\n        );\n    }\n\n\n}\nNewCardForm.propTypes = {\n    addCardCallback: PropTypes.func.isRequired,\n};\n\nexport default NewCardForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport './Board.css';\nimport Card from './Card';\nimport NewCardForm from './NewCardForm';\nimport CARD_DATA from '../data/card-data.json';\n\nclass Board extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardList: [],\n      error: \"\"\n    };\n  }\n  \n\n  componentDidMount() {\n    axios.get(`${this.props.url}${this.props.boardName}/cards`)\n      .then((response) => {\n        const cardlist = response.data.map((card) => {\n          const newCard = {\n            ...card,\n          }\n          return newCard\n        })\n        console.log(cardlist)\n        this.setState({\n          cardList: cardlist,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        alert('Error happened');\n        this.setState({ error: error.message });\n      });\n  }\n  onDeleteCard = (cardId) => {\n    const newCardList = this.state.cardList.filter(card => card[\"card\"].id !== cardId)\n    console.log(newCardList)\n    this.setState({\n      cardList: newCardList,\n    })\n    axios.delete(`https://inspiration-board.herokuapp.com/cards/${cardId}`)\n      .then((response) => {\n        console.log(response)\n      })\n      .catch((error) => {\n        console.log(error)\n        alert('Error happened');\n        this.setState({ error: error.message });\n      })\n  }\n  addCardCallback = (card) => {\n    const cardIds = this.state.cardList.map(item => item.card.id)\n\n    this.setState({\n      cardList: [...this.state.cardList, { card:{...card, id: Math.max(...cardIds) + 1 }}]\n    });\n    axios.post(`${this.props.url}${this.props.boardName}/cards`, {text: card.text, emoji: card.emoji})\n    .then((response) => {\n      console.log(response)\n    })\n    .catch((error)=> {\n      console.log(error)\n      alert('Error happened');\n      this.setState({ error });\n    })\n  }\n\n\n\n\n\n\n  render() {\n    const cardcollection = this.state.cardList.map((card, i) => {\n      return ([\n        <Card\n          key={i}\n          id={card[\"card\"].id}\n          text={card[\"card\"].text}\n          emoji={card[\"card\"].emoji}\n          onDeleteCard={this.onDeleteCard}\n        />]\n      )\n    })\n    return (\n      <div>\n        <header classname=\"validation-errors-display\">\n          {this.state.error}\n        </header>\n        <div classname=\"board\">\n          {cardcollection}\n        </div>\n        <div>\n          <NewCardForm addCardCallback={this.addCardCallback}/>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nBoard.propTypes = {\n  // cardList: PropTypes.array.isRequired,\n  onDeleteCard: PropTypes.func,\n  addCardCallback: PropTypes.func\n\n};\n\nexport default Board;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Board from './components/Board';\n\nclass App extends Component {\n  render() {\n    return (\n      <section>\n        <header className=\"header\">\n          <h1 className=\"header__h1\"><span className=\"header__text\">Inspiration Board</span></h1>\n        </header>\n        <Board\n          url=\"https://inspiration-board.herokuapp.com/boards/\"\n          boardName={`Bita-Amani`}\n          />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}